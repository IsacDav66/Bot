// plugins/tagall.js
// Menci√≥n masiva est√°ndar con mensaje personalizado.

// No se necesitan importaciones extra aqu√≠

const execute = async (client, message, args) => {
    // 1. Obtener Chat y verificar si es grupo
    let chat;
    try {
        chat = await message.getChat();
        if (!chat.isGroup) {
            return message.reply('Este comando solo funciona en grupos.');
        }
    } catch (error) {
        console.error("[TagAll] Error obteniendo chat:", error);
        return message.reply('‚ùå Error al obtener la informaci√≥n del chat.');
    }

    // 2. Obtener Participantes
    console.log(`[TagAll] Obteniendo participantes para ${chat.name}...`);
    let participants;
    try {
        participants = chat.participants;
        if (!participants || participants.length === 0) {
            await chat.fetchParticipants(); // Fallback
             participants = chat.participants;
        }
        if (!participants || participants.length === 0) {
            throw new Error("Lista de participantes vac√≠a.");
        }
        console.log(`[TagAll] Participantes obtenidos: ${participants.length}`);
    } catch (error) {
        console.error(`[TagAll] Error obteniendo participantes:`, error);
        return message.reply('‚ùå Error al obtener la lista de participantes del grupo.');
    }

    // 3. Preparar el mensaje de texto
    const messageContent = args.join(' ') || 'Sin mensaje especificado.'; // Mensaje del usuario o default
    const messageHeader = `*‚∫Äüö® RALLY/ANUNCIO üö®‚∫Ä*\n\n`;
    const announcement = `‚ùè *ùôºùô¥ùôΩùöÇùô∞ùôπùô¥:* ${messageContent}\n\n`;

    // Truco "Leer m√°s"
    const invisibleSpace = String.fromCharCode(8206);
    const readMore = invisibleSpace.repeat(4001);

    // Construir la lista de etiquetas y el array de menciones para WWebJS
    let participantTags = `‚ùè *ùô¥ùöÉùô∏ùô∂ùöÑùô¥ùöÉùô∞ùöÇ:*\n`;
    const mentions = [];

    participants.forEach(p => {
        participantTags += `‚î£‚û• @${p.id.user}\n`;       // Texto visible con @numero
        mentions.push(p.id._serialized); // ID completo para la librer√≠a
    });

    const footer = `\n*‚îî* *Creado por Gowther Shop 7*\n\n*‚ñå‚îÇ‚ñà‚ïë‚ñå‚ïë‚ñå‚ïë‚ïë‚ñå‚ïë‚ñå‚ïë‚ñå‚ïë‚ñà*`;
    const finalText = `${messageHeader}${announcement}${readMore}${participantTags}${footer}`;

    // 4. Enviar el mensaje con menciones
    try {
        console.log(`[TagAll] Enviando menci√≥n masiva a ${chat.id._serialized}`);
        await client.sendMessage(chat.id._serialized, finalText, {
            mentions: mentions // Array de IDs serializados
        });
        console.log('[TagAll] Mensaje de menci√≥n enviado.');
    } catch (error) {
        console.error(`[TagAll] Error al enviar mensaje:`, error);
        await message.reply(`‚ùå Error al enviar el mensaje de menci√≥n masiva. Detalles: ${error.message}`);
    }
};

// Exportar como Comando est√°ndar
module.exports = {
    name: 'tagall_general',
    aliases: ['tagall', 'rally', 'invocar', 'invocacion', 'todos', 'invocaci√≥n', 'aviso'], // Comandos
    description: 'Menciona a todos los miembros del grupo con un mensaje.',
    category: 'Utilidad',
    groupOnly: true, // Solo grupos
    execute: execute
};